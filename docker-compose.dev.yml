version: '3.8'

services:
  # Backend service (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: be-cartrack-imb-dev
    restart: unless-stopped
    ports:
      - "8003:8003"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/vendor
      - uploads_data_dev:/app/uploads
      - logs_data_dev:/app/logs
    networks:
      - cartrack-network-dev
    depends_on:
      - db
    command: ["go", "run", "./cmd/app/main.go"]

  # Frontend service (Development)
  frontend:
    build:
      context: ./TrackingTruck
      dockerfile: Dockerfile.dev
    container_name: fe-cartrack-imb-dev
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8003
    volumes:
      - ./TrackingTruck:/app
      - /app/node_modules
      - ./TrackingTruck/logs/nginx:/var/log/nginx
    networks:
      - cartrack-network-dev
    depends_on:
      - backend
    command: ["npm", "run", "dev"]

  # PostgreSQL database service (Development)
  db:
    image: postgres:15-alpine
    container_name: db-cartrack-imb-dev
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Iwandila123.
    volumes:
      - db_data_dev:/var/lib/postgresql/data
      - ./backend/db/migrations:/docker-entrypoint-initdb.d
    networks:
      - cartrack-network-dev

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: redis-cartrack-imb-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - cartrack-network-dev

volumes:
  db_data_dev:
    driver: local
  uploads_data_dev:
    driver: local
  logs_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  cartrack-network-dev:
    driver: bridge
